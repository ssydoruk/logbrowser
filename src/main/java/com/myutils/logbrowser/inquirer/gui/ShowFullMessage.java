/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.myutils.logbrowser.inquirer.gui;

import Utils.ScreenInfo;
import com.myutils.logbrowser.common.JSRunner;
import com.myutils.logbrowser.common.RecordPrintout;
import com.myutils.logbrowser.inquirer.ILogRecord;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.ScrollPaneConstants;
import org.apache.commons.lang3.StringUtils;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rtextarea.RTextScrollPane;

/**
 *
 * @author ssydoruk
 */
public class ShowFullMessage extends javax.swing.JFrame {

    private ReportFrameQuery parentForm;
    RSyntaxTextArea detailedMessage;
    RSyntaxTextArea jtaMessageText;

    /**
     * Creates new form ShowFullMessage
     */
    public ShowFullMessage() {
        initComponents();
        jtaMessageText = new RSyntaxTextArea();
        jtaMessageText.setCodeFoldingEnabled(false);
        jtaMessageText.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_PYTHON);
        jtaMessageText.setWrapStyleWord(true);
        jtaMessageText.setLineWrap(true);
        jtaMessageText.setEditable(false);

        pFullMessage.add(new RTextScrollPane(jtaMessageText));

        detailedMessage = new RSyntaxTextArea();
        detailedMessage.setCodeFoldingEnabled(true);
        detailedMessage.setWrapStyleWord(true);
        detailedMessage.setLineWrap(true);
        detailedMessage.setEditable(false);

        pDetailedMessage.add(new RTextScrollPane(detailedMessage));

        pack();
    }

    ShowFullMessage(ReportFrameQuery aThis) {
        this();
        parentForm = aThis;
        ScreenInfo.CenterWindowTopMaxWidth(this);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
//                if (fullMsg != null) {
//                    fullMsg.dispose();
//                    fullMsg = null;
//                }
                parentForm.fullMsgClosed();
                super.windowClosing(e); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void windowGainedFocus(WindowEvent e) {
//                if (fullMsg != null) {
//                    fullMsg.setVisible(true);
//                }
                super.windowGainedFocus(e); //To change body of generated methods, choose Tools | Templates.
            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        spSplitPane = new javax.swing.JSplitPane();
        pFullMessage = new javax.swing.JPanel();
        pDetailedMessage = new javax.swing.JPanel();

        setAutoRequestFocus(false);
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setLayout(new java.awt.BorderLayout());

        spSplitPane.setDividerSize(2);
        spSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        spSplitPane.setResizeWeight(0.5);

        pFullMessage.setLayout(new java.awt.BorderLayout());
        spSplitPane.setLeftComponent(pFullMessage);

        pDetailedMessage.setLayout(new java.awt.BorderLayout());
        spSplitPane.setRightComponent(pDetailedMessage);

        jPanel1.add(spSplitPane, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        parentForm.fullMsgClosed();
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowDeactivated

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pDetailedMessage;
    private javax.swing.JPanel pFullMessage;
    private javax.swing.JSplitPane spSplitPane;
    // End of variables declaration//GEN-END:variables

    void showMessage(String recordDisplayScript, ILogRecord record) {
//        detailedMessage.setText("");
        if (StringUtils.isEmpty(recordDisplayScript)) {
            jtaMessageText.setText(record.getBytes());
        } else {
            RecordPrintout recPrintout = JSRunner.evalFullRecordPrintout(recordDisplayScript, record);
            jtaMessageText.setText(recPrintout.fullMessage);
            if (StringUtils.isNotEmpty(recPrintout.detailsMessage)) {
                detailedMessage.setText(recPrintout.detailsMessage);
                detailedMessage.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JSON);

            }
        }
    }
}
